{
  "hash": "8ad0aa85cae54c56b4bf70b92e01b834",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Teams stats\"\n# subtitle: |\n#   These are the fantastic people that have decided to participate\n#   to the PRC Data Challenge 2025.\nlisting:\n  id: teams-listings\n  contents: \"*.qmd\"\n  field-display-names:\n    title: \"Team\"\n    date: \"Request date\"\n    subtitle: \"Country\"\n  fields: [title, subtitle, date]\n#   # sort: \"date desc\"\n  type: table\n  date-format: \"iso\"\n#   # categories: unnumbered\n#   # sort-ui: false\n  filter-ui: [title, subtitle, date]\n#   # image-align: left\n#   # image-height: 1.75in\n# title-block-banner: false\n\nformat:\n  html:\n    toc: true\n    toc-depth: 2\n\nacronyms:\n  insert_loa: false\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Cumulative count of team creation, 2025 in **[blue]{fg=\"#0000FF\"}**, 2024 in **[green]{fg=\"#008000\"}**.](index_files/figure-html/cumulative-plot-jj-1.png){width=672}\n:::\n:::\n\n\n\n```{ojs}\n//| echo: false\nd3 = require.alias({\n  d3: 'd3@7.7.0/dist/d3.min.js',\n  'd3-geo': 'd3@7.7.0/dist/d3.min.js',\n  'd3-array': 'd3@7.7.0/dist/d3.min.js',\n  'd3-geo-projection': 'd3-geo-projection@4.0.0/dist/d3-geo-projection.min.js',\n  'd3-geo-polygon': 'd3-geo-polygon@1.12.1/dist/d3-geo-polygon.min.js'\n})('d3', 'd3-geo-projection', 'd3-geo-polygon')\n\nworld = FileAttachment('../data/world.topo.json').json()\n\nland = topojson.feature(world, world.objects.land)\n\ncountries = topojson.feature(world, world.objects.countries)\n\nteams_country = FileAttachment('../data/teams_country@35.csv').csv({ typed: true })\n\norigin = new Map(teams_country.map((d) => [d.iso3c, +d.n]))\n\ncountries_without_antarctica = {\n  var l = JSON.parse(JSON.stringify(countries)); // clone (useless here but a good idea in general)\n  // remove antarctica, i.e. code \"010\"\n  l.features = l.features.filter((d) => d.id != '010');\n  return l;\n}\n\nprojection = d3['geoBertin1953']().rotate([-4, -43]).precision(0.1)\n\nPlot.plot({\n  width: 1000,\n  height: 560,\n  margin: 5,\n  projection: projection,\n  color: {\n    type: 'quantize',\n    n: 11,\n    // unknown: '#ced4da',\n    domain: [1, 18],\n    scheme: 'reds',\n    label: 'Number of teams',\n    legend: true\n  },\n  marks: [\n    Plot.sphere({\n      // fill: d3.rgb(241, 246, 251).formatHex(),\n      fill: '#00FFFF',\n      opacity: 0.3,\n      stroke: 'currentColor'\n    }),\n    Plot.geo(countries_without_antarctica, { fill: '#FFFFFF', opacity: 1 }),\n    Plot.geo(\n      countries_without_antarctica.features.filter(\n        (d) => ![\"GUF\"].includes(d.properties.name)\n      ),\n      Plot.centroid({\n        fill: (d) => origin.get(d.properties.a3),\n        tip: true,\n        channels: {\n          Country: (d) => d.properties.name\n        }\n      })\n    ),\n    Plot.geo(countries_without_antarctica, { stroke: 'black' })\n  ]\n})\n```\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Teams per country](index_files/figure-html/teams-bar-jj-1.png){width=672}\n:::\n:::\n\n\n\n## Teams\n\n::: {#teams-listings}\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}